---
- name: Check SSH Port and Generate CSV Report
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    # Define a filename with a timestamp to ensure it's unique for each run
    ftp_server_ip: "192.168.1.19" 
    report_filename: "ssh_connectivity_report_{{ ansible_date_time.iso8601 | replace(':', '-') }}.csv"
    report_path: "/tmp/{{ report_filename }}"

  tasks:
    - name: Check if TCP port 22 is open on each host
      ansible.builtin.wait_for:
        host: "{{ hostvars[item]['ansible_host'] | default(item) }}"
        port: 22
        timeout: 5
        delay: 0
      loop: "{{ groups['all'] }}"
      register: ssh_results
      ignore_errors: true
      loop_control:
        loop_var: item

    - name: Assemble CSV content
      ansible.builtin.set_fact:
        csv_content: |
          hostname,status
          {% for item in ssh_results.results %}
          {{ item.item }},{{ 'SUCCESS' if not item.failed else 'FAILURE' }}
          {% endfor %}
      run_once: true

    - name: Save CSV report to a file
      ansible.builtin.copy:
        content: "{{ csv_content }}"
        dest: "/tmp/{{ report_filename }}"
      run_once: true
      
    - name: Display report file location
      ansible.builtin.debug:
        msg: "Report successfully generated at /tmp/{{ report_filename }} on the execution node. Configure Job Artifacts to download."
      run_once: true

    - name: Upload report to open FTP server using curl
      ansible.builtin.shell:
        cmd: "curl -T {{ report_path }} ftp://{{ ftp_server_ip }}/upload/{{ report_filename }}"
      run_once: true

    - name: Display final report location
      ansible.builtin.debug:
        msg: "Report successfully uploaded to ftp://{{ ftp_server_ip }}/upload/{{ report_filename }}"
      run_once: true

